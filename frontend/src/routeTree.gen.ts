/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as unauthorizedRoute } from './routes/unauthorized'
import { Route as registerRoute } from './routes/register'
import { Route as loginRoute } from './routes/login'
import { Route as indexRoute } from './routes/index'
import { Route as forgotPasswordRoute } from './routes/forgot-password'
import { Route as dashboardRoute } from './routes/dashboard'
import { Route as masterAdminDashboardRoute } from './routes/master-admin/dashboard'
import { Route as adminDashboardRoute } from './routes/admin/dashboard'

// Create Virtual Routes

const MasterAdminLazyRoute = createFileRoute('/master-admin')()
const AdminLazyRoute = createFileRoute('/admin')()

// Create/Update Routes

const MasterAdminRoute = MasterAdminLazyRoute.update({
  path: '/master-admin',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminLazyRoute.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const UnauthorizedRoute = unauthorizedRoute.update({
  path: '/unauthorized',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = registerRoute.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = loginRoute.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = indexRoute.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = forgotPasswordRoute.update({
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = dashboardRoute.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const MasterAdminDashboardRoute = masterAdminDashboardRoute.update({
  path: '/dashboard',
  getParentRoute: () => MasterAdminRoute,
} as any)

const AdminDashboardRoute = adminDashboardRoute.update({
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexRoute
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminRoute
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      preLoaderRoute: typeof AdminDashboardRoute
      parentRoute: typeof AdminRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardRoute
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      preLoaderRoute: typeof ForgotPasswordRoute
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginRoute
      parentRoute: typeof rootRoute
    }
    '/master-admin': {
      preLoaderRoute: typeof MasterAdminRoute
      parentRoute: typeof rootRoute
    }
    '/master-admin/dashboard': {
      preLoaderRoute: typeof MasterAdminDashboardRoute
      parentRoute: typeof MasterAdminRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterRoute
      parentRoute: typeof rootRoute
    }
    '/unauthorized': {
      preLoaderRoute: typeof UnauthorizedRoute
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AdminRoute.addChildren([AdminDashboardRoute]),
  DashboardRoute,
  ForgotPasswordRoute,
  LoginRoute,
  MasterAdminRoute.addChildren([MasterAdminDashboardRoute]),
  RegisterRoute,
  UnauthorizedRoute,
])

/* prettier-ignore-end */
